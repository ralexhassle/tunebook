version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tunebook-postgres
    environment:
      POSTGRES_DB: tunebook
      POSTGRES_USER: tunebook
      POSTGRES_PASSWORD: tunebook_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tunebook"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: tunebook-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: ./apps/api-server
    container_name: tunebook-api
    environment:
      - PORT=3000
    depends_on:
      - postgres

  graphql:
    build: ./apps/graphql-server
    container_name: tunebook-graphql
    environment:
      - PORT=4000
    ports:
      - "4000:4000"
    depends_on:
      - postgres

  pwa:
    build: ./apps/pwa
    container_name: tunebook-pwa
    environment:
      - GRAPHQL_ENDPOINT=http://graphql:4000/graphql
    depends_on:
      - graphql

volumes:
  postgres_data:
  redis_data: